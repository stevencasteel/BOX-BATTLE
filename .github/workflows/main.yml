# Fixed Godot CI workflow to properly create build artifacts

name: Godot CI

on:
  push:
    branches: [ "main" ]

jobs:
  build-mac:
    name: Build for macOS
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directories
        run: |
          mkdir -vp .godot/editor .godot/imported
          mkdir -vp build/macos
      - name: Setup export templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Build and Export for macOS
        run: |
          godot --headless --verbose --export-release "macOS" build/macos/BOX\ BATTLE.dmg
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directories
        run: |
          mkdir -vp .godot/editor .godot/imported
          mkdir -vp build/linux
      - name: Setup export templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Build and Export for Linux
        run: |
          godot --headless --verbose --export-release "Linux" build/linux/BOX\ BATTLE.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux

  build-windows:
    name: Build for Windows
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directories
        run: |
          mkdir -vp .godot/editor .godot/imported
          mkdir -vp build/windows
      - name: Setup export templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Build and Export for Windows
        run: |
          godot --headless --verbose --export-release "Windows Desktop" build/windows/BOX\ BATTLE.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows

  build-web:
    name: Build for Web
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directories
        run: |
          mkdir -vp .godot/editor .godot/imported
          mkdir -vp build/web
      - name: Setup export templates
        run: |
          mkdir -p ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Build and Export for Web
        run: |
          godot --headless --verbose --export-release "Web" build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  # Optional: Create a release with all artifacts
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-mac, build-linux, build-windows, build-web]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-build/*
            linux-build/*
            windows-build/*
            web-build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}