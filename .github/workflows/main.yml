name: Godot CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*' # This will also trigger the workflow for tags like v1.0.0

jobs:
  build-windows:
    name: Build for Windows
    runs-on: ubuntu-latest
    container:
      # CORRECTED IMAGE NAME:
      image: abarichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directory
        run: mkdir -v build/windows
      - name: Build and Export for Windows
        run: godot --headless --verbose --export-release "Windows Desktop" "build/windows/BOX BATTLE.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows

  build-mac:
    name: Build for macOS
    runs-on: ubuntu-latest
    container:
      # CORRECTED IMAGE NAME:
      image: abarichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directory
        run: mkdir -v build/macos
      - name: Build and Export for macOS
        # Note: The output from the container will be a .zip. Creating a .dmg requires a macOS runner.
        run: godot --headless --verbose --export-release "macOS" "build/macos/BOX BATTLE.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    container:
      # CORRECTED IMAGE NAME:
      image: abarichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directory
        run: mkdir -v build/linux
      - name: Build and Export for Linux
        run: godot --headless --verbose --export-release "Linux" "build/linux/BOX BATTLE.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux

  build-web:
    name: Build for Web
    runs-on: ubuntu-latest
    container:
      # CORRECTED IMAGE NAME:
      image: abarichello/godot-ci:4.4.1-stable
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup build directory
        run: mkdir -v build/web
      - name: Build and Export for Web
        run: godot --headless --verbose --export-release "Web" "build/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web
          
  # This job will only run when you push a tag (e.g., v1.0.0)
  create-release:
    name: Create GitHub Release
    # This job needs the build jobs to be completed first
    needs: [build-windows, build-mac, build-linux, build-web]
    runs-on: ubuntu-latest
    # This condition ensures the release is only created for tags, not every push to main
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # The release action needs to check out the code to read the tag information
      - uses: actions/checkout@v4
      
      # Download all the build artifacts that were uploaded by the previous jobs
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      # Create the actual release and upload the files from the artifact folders
      - name: Create Release and Upload Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-build/*
            artifacts/macos-build/*
            artifacts/linux-build/*
            artifacts/web-build/*